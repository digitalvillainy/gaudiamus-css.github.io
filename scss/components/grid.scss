
.#{$grid-container-prefix}{
  display: grid;
}
[class^='#{$grid-container-prefix}-']{
  display: grid;
  grid-template-rows: auto;
}

@each $property, $propertyValue in $placement-properties{
  @each $axis, $placementValue in $placement-map{
    .#{$placement-key}-#{$axis}-#{$property}{ #{$placementValue}: unquote($propertyValue)}
    @each $breakpoint, $value in $breakpoint-map {
      @media (min-width: $value) {
        .#{$breakpoint}\:#{$placement-key}-#{$axis}-#{$property}{ #{$placementValue}: unquote($propertyValue)}
      }
    }
  }
}

@mixin deep-grid($currentTotal, $currentClass, $currentValues, $level){
  @for $k from 1 through $columns{
    $newTotal: $currentTotal + $k;
    @if ($newTotal <= $columns){
      $newValues: unquote($currentValues + ' '+(100/12*($k))+'%');
      $newClass: unquote($currentClass + '-'+ ($k));
      #{$newClass} { grid-template-columns: $newValues }
      @if($level < $items){
        @include deep-grid($newTotal, $newClass, $newValues, $level + 1)
      }
    }
  }
}
@include deep-grid(0,'.#{$grid-container-prefix}','',1);

@each $breakpoint, $value in $breakpoint-map {
  @media (min-width: $value) {
    @include deep-grid(0,'.#{$breakpoint}\\:#{$grid-container-prefix}','',1);
  }
}

